{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport OverlayImage from \"../components/OverlayImage\";\nimport CustomButton from \"../components/Button\";\nimport Input from \"../components/Input\";\nimport CustomLink from \"../components/Link\";\nimport Title from \"../components/Title\";\nimport PasswordInput from \"../components/PasswordInput\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Registration() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    keyboardHeight = _useState2[0],\n    setKeyboardHeight = _useState2[1];\n  useEffect(function () {\n    var keyboardDidShowListener = Keyboard.addListener(\"keyboardDidShow\", function (event) {\n      var height = event.endCoordinates.height;\n      setKeyboardHeight(height - 150);\n    });\n    var keyboardDidHideListener = Keyboard.addListener(\"keyboardDidHide\", function () {\n      setKeyboardHeight(0);\n    });\n    return function () {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n    };\n  }, []);\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(ImageBackground, {\n        source: require(\"../img/Photo-BG.jpg\"),\n        style: styles.imageBackground,\n        resizeMode: \"cover\",\n        children: _jsxs(View, {\n          style: [styles.overlayContainer, {\n            paddingBottom: keyboardHeight\n          }],\n          children: [_jsx(OverlayImage, {}), _jsxs(View, {\n            style: styles.formContainer,\n            children: [_jsx(Image, {\n              source: require(\"../img/Rectangle-empty.jpg\"),\n              style: styles.overlayImage\n            }), _jsx(Title, {\n              title: \"Реєстрація\",\n              top: 300\n            }), _jsx(View, {\n              style: {\n                paddingBottom: keyboardHeight\n              },\n              children: _jsxs(KeyboardAvoidingView, {\n                behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n                children: [_jsx(Input, {\n                  placeholder: \"\\u041B\\u043E\\u0433\\u0456\\u043D\"\n                }), _jsx(Input, {\n                  placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0430 \\u0435\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0457 \\u043F\\u043E\\u0448\\u0442\\u0438\"\n                }), _jsx(PasswordInput, {})]\n              })\n            }), _jsx(CustomButton, {\n              width: 343,\n              text: \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\",\n              onPress: function onPress() {\n                return console.log(\"log in\");\n              }\n            }), _jsxs(View, {\n              style: styles.text,\n              children: [_jsx(Text, {\n                style: styles.textColor,\n                children: \"\\u0412\\u0436\\u0435 \\u0454 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442?\"\n              }), _jsx(CustomLink, {\n                color: \"#1B4371\",\n                top: 0,\n                left: 10,\n                text: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\",\n                onPress: function onPress() {\n                  return console.log(\"link\");\n                }\n              })]\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    flex: 1\n  }, StyleSheet.absoluteFill),\n  imageBackground: {\n    flex: 1\n  },\n  overlayContainer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFill), {}, {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }),\n  formContainer: {\n    position: \"absolute\",\n    top: 32,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textColor: {\n    color: \"#1B4371\"\n  }\n});","map":{"version":3,"names":["OverlayImage","CustomButton","Input","CustomLink","Title","PasswordInput","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Registration","_useState","_useState2","_slicedToArray","keyboardHeight","setKeyboardHeight","keyboardDidShowListener","Keyboard","addListener","event","height","endCoordinates","keyboardDidHideListener","remove","TouchableWithoutFeedback","onPress","dismiss","children","View","style","styles","container","ImageBackground","source","require","imageBackground","resizeMode","overlayContainer","paddingBottom","formContainer","Image","overlayImage","title","top","KeyboardAvoidingView","behavior","Platform","OS","placeholder","width","text","console","log","Text","textColor","color","left","StyleSheet","create","_objectSpread","flex","absoluteFill","alignItems","justifyContent","position","right","bottom","flexDirection"],"sources":["/Users/Anastasia/Desktop/goit-react_native-hw-02-login-registration/Screens/RegistrationScreen.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { TextInput, Button, View, StyleSheet, Text } from 'react-native';\n\n// const Registration = () => {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [validationError, setValidationError] = useState('');\n\n//   const validateName = () => {\n//     const nameRegex = /^[a-zA-Z]+$/;\n//     if (!nameRegex.test(name)) {\n//       setValidationError('Invalid name');\n//     } else {\n//       setValidationError('');\n//     }\n//   };\n\n//   const validateEmail = () => {\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     if (!emailRegex.test(email)) {\n//       setValidationError('Invalid email');\n//     } else {\n//       setValidationError('');\n//     }\n//   };\n\n//   const validatePassword = () => {\n//     if (password.length < 6) {\n//       setValidationError('Password should be at least 6 characters');\n//     } else {\n//       setValidationError('');\n//     }\n//   };\n\n//   const handleSubmit = () => {\n//     validateName();\n//     validateEmail();\n//     validatePassword();\n\n//     if (!validationError) {\n//       console.log('Form submitted successfully');\n//     }\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <TextInput\n//         style={styles.input}\n//         value={name}\n//         onChangeText={setName}\n//         onBlur={validateName}\n//         placeholder=\"Name\"\n//       />\n//       <TextInput\n//         style={styles.input}\n//         value={email}\n//         onChangeText={setEmail}\n//         onBlur={validateEmail}\n//         placeholder=\"Email\"\n//       />\n//       <TextInput\n//         style={styles.input}\n//         value={password}\n//         onChangeText={setPassword}\n//         onBlur={validatePassword}\n//         placeholder=\"Password\"\n//         secureTextEntry\n//       />\n//       {validationError ? <Text style={styles.error}>{validationError}</Text> : null}\n//       <Button title=\"Submit\" onPress={handleSubmit} />\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: 'center',\n//     paddingHorizontal: 20,\n//   },\n//   input: {\n//     height: 40,\n//     borderWidth: 1,\n//     borderColor: '#ccc',\n//     paddingHorizontal: 10,\n//     marginBottom: 10,\n//   },\n//   error: {\n//     color: 'red',\n//     marginBottom: 10,\n//   },\n// });\n\n// export default Registration;\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ImageBackground,\n  TouchableWithoutFeedback,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport OverlayImage from \"../components/OverlayImage\";\nimport CustomButton from \"../components/Button\";\nimport Input from \"../components/Input\";\nimport CustomLink from \"../components/Link\";\nimport Title from \"../components/Title\";\nimport PasswordInput from \"../components/PasswordInput\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Registration() {\n  const [keyboardHeight, setKeyboardHeight] = useState(0);\n\n  useEffect(() => {\n    const keyboardDidShowListener = Keyboard.addListener(\n      \"keyboardDidShow\",\n      (event) => {\n        const { height } = event.endCoordinates;\n        setKeyboardHeight(height - 150);\n      }\n    );\n\n    const keyboardDidHideListener = Keyboard.addListener(\n      \"keyboardDidHide\",\n      () => {\n        setKeyboardHeight(0);\n      }\n    );\n\n    return () => {\n      keyboardDidShowListener.remove();\n      keyboardDidHideListener.remove();\n    };\n  }, []);\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View style={styles.container}>\n        <ImageBackground\n          source={require(\"../img/Photo-BG.jpg\")}\n          style={styles.imageBackground}\n          resizeMode=\"cover\"\n        >\n          <View\n            style={[styles.overlayContainer, { paddingBottom: keyboardHeight }]}\n          >\n            <OverlayImage />\n            <View style={styles.formContainer}>\n              <Image\n                source={require(\"../img/Rectangle-empty.jpg\")}\n                style={styles.overlayImage}\n              />\n              <Title title={\"Реєстрація\"} top={300} />\n              <View style={{ paddingBottom: keyboardHeight }}>\n                <KeyboardAvoidingView\n                  behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n                >\n                  <Input placeholder=\"Логін\"></Input>\n                  <Input placeholder=\"Адреса електронної пошти\"></Input>\n                  <PasswordInput />\n                </KeyboardAvoidingView>\n              </View>\n\n              <CustomButton\n                width={343}\n                text=\"Зареєструватися\"\n                onPress={() => console.log(\"log in\")}\n              />\n              <View style={styles.text}>\n                <Text style={styles.textColor}>Вже є акаунт?</Text>\n                <CustomLink\n                  color=\"#1B4371\"\n                  top={0}\n                  left={10}\n                  text=\"Увійти\"\n                  onPress={() => console.log(\"link\")}\n                />\n              </View>\n            </View>\n          </View>\n        </ImageBackground>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...StyleSheet.absoluteFill,\n  },\n  imageBackground: {\n    flex: 1,\n  },\n  overlayContainer: {\n    ...StyleSheet.absoluteFill,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  formContainer: {\n    position: \"absolute\",\n    top: 32,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  text: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  textColor: {\n    color: \"#1B4371\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}